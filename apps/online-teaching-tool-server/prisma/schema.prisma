datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Tutor {
  biography String?
  courses   Course[]
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  rating    Float?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  createdAt DateTime      @default(now())
  email     String?
  id        String        @id @default(cuid())
  password  String?
  role      EnumUserRole?
  students  Student[]
  tutors    Tutor[]
  updatedAt DateTime      @updatedAt
  username  String?
}

model Booking {
  course    Course?            @relation(fields: [courseId], references: [id])
  courseId  String?
  createdAt DateTime           @default(now())
  date      DateTime?
  id        String             @id @default(cuid())
  status    EnumBookingStatus?
  student   Student?           @relation(fields: [studentId], references: [id])
  studentId String?
  updatedAt DateTime           @updatedAt
}

model Student {
  bookings        Booking[]
  createdAt       DateTime  @default(now())
  enrolledCourses String?
  id              String    @id @default(cuid())
  updatedAt       DateTime  @updatedAt
  user            User?     @relation(fields: [userId], references: [id])
  userId          String?
}

model Course {
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  description String?
  id          String    @id @default(cuid())
  price       Float?
  title       String?
  tutor       Tutor?    @relation(fields: [tutorId], references: [id])
  tutorId     String?
  updatedAt   DateTime  @updatedAt
}

enum EnumUserRole {
  Option1
}

enum EnumBookingStatus {
  Option1
}
